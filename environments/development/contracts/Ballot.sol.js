// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"proposal","type":"uint256"}],"name":"vote","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"proposals","outputs":[{"name":"name","type":"bytes32"},{"name":"voteCount","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"proposalsCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"chairperson","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"proposalNames","type":"bytes32[]"}],"name":"initialize","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"value","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"}],"name":"delegate","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"winningProposal","outputs":[{"name":"winningProposal","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"votersCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"voter","type":"address"}],"name":"giveRightToVote","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"initiated","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"voters","outputs":[{"name":"weight","type":"uint256"},{"name":"voted","type":"bool"},{"name":"delegate","type":"address"},{"name":"vote","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getProposal","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getVoter","outputs":[{"name":"","type":"address"},{"name":"","type":"uint256"},{"name":"","type":"bool"},{"name":"","type":"address"},{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"proposalNames","type":"bytes32[]"}],"type":"constructor"}],
    binary: "60606040526040516108df3803806108df8339810160405280510160008054600160a060020a0319163317808255600160a060020a03168152600460205260409020600190819055600280549182018082559091908281838015829011608557818360005260206000209182019101608591905b8082111560c357600081556001016073565b505050919090600052602060002090016000548154600160a060020a031916600160a060020a03919091161790555050610818806100c76000396000f35b509056606060405236156100ae5760e060020a60003504630121b93f81146100b0578063013cf08b146100e05780630a9f46ad146101345780632e4176cf1461013e57806337ea92f5146101505780633fa4f245146102055780635c19a95c1461020e578063609ff1bd1461024157806398c07938146102b65780639e7b8d61146102c15780639f1185361461030a578063a3ec138d14610316578063c7f758a814610352578063d07bff0c146103c5575b005b6100ae60043533600160a060020a03166000908152600460205260409020600181015460ff161561051357610002565b61044d60043560058054829081101561000257506000526002027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08101546000805160206107f88339815191529091015482565b6104666005545b90565b610478600054600160a060020a031681565b604080516004803580820135602081810285810182019096528185526100ae9593946024949093850192918291908501908490808284375094965050505050505060005b815181101561056057600580546001810180835582818380158290116105715760008390526105719060029081027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0908101918402015b808211156105de57600080825560018201556002016101eb565b61046660015481565b6100ae60043533600160a060020a03166000908152600460205260408120600181015490919060ff16156105e257610002565b610466600080805b60055481101561074857816005600050828154811015610002576000919091526002026000805160206107f8833981519152015411156102ae57600580548290811015610002576002026000805160206107f883398151915201549193509091508290505b600101610249565b61046660025461013b565b6100ae60043560005433600160a060020a0390811691161415806103005750600160a060020a03811660009081526004602052604090206001015460ff165b1561074d57610002565b61049560035460ff1681565b6104a960043560046020526000908152604090208054600182015460029290920154909160ff811691610100909104600160a060020a03169084565b61044d600435600060006005600050838154811015610002575080548183527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600286020154919085908110156100025750506000805160206107f8833981519152600290940293909301549293915050565b6104d86004356000600060006000600060006000600260005088815481101561000257507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90980154600160a060020a039081169182905260046020526040909220805460018201549190990154919960ff8216985061010090910490921695509350915050565b6040805192835260208301919091528051918290030190f35b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b604080519115158252519081900360200190f35b604080519485529215156020850152600160a060020a0391909116838301526060830152519081900360800190f35b60408051600160a060020a03968716815260208101959095529215158484015293166060830152608082019290925290519081900360a00190f35b6001818101805460ff19169091179055600281018290556005805482549190849081101561000257506000526002929092026000805160206107f883398151915201805490920190915550565b6003805460ff191660011790555050565b5050509190906000526020600020906002020160006040604051908101604052808686815181101561000257906020019060200201518152602001600081526020015090919091506000820151816000016000505560208201518160010160005055505050600101610194565b5090565b5b600160a060020a03838116600090815260046020526040812060010154610100900490911614801590610660575033600160a060020a03166004600050600085600160a060020a0316815260200190815260200160002060005060010160019054906101000a9004600160a060020a0316600160a060020a031614155b1561069057600160a060020a039283166000908152600460205260409020600101546101009004909216916105e3565b33600160a060020a031683600160a060020a031614156106af57610002565b506001818101805460ff1916821774ffffffffffffffffffffffffffffffffffffffff0019166101008502179055600160a060020a03831660009081526004602052604090209081015460ff161561073b578154600282015460058054909190811015610002576000919091526002026000805160206107f88339815191520180549091019055610743565b815481540181555b505050565b505090565b600160a060020a03811660009081526004602052604090206001908190556002805491820180825590919082818380158290116107c95760008390526107c9907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9081019083015b808211156105de57600081556001016107b5565b505050600092835250602090912001805473ffffffffffffffffffffffffffffffffffffffff1916909117905556036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1",
    unlinked_binary: "60606040526040516108df3803806108df8339810160405280510160008054600160a060020a0319163317808255600160a060020a03168152600460205260409020600190819055600280549182018082559091908281838015829011608557818360005260206000209182019101608591905b8082111560c357600081556001016073565b505050919090600052602060002090016000548154600160a060020a031916600160a060020a03919091161790555050610818806100c76000396000f35b509056606060405236156100ae5760e060020a60003504630121b93f81146100b0578063013cf08b146100e05780630a9f46ad146101345780632e4176cf1461013e57806337ea92f5146101505780633fa4f245146102055780635c19a95c1461020e578063609ff1bd1461024157806398c07938146102b65780639e7b8d61146102c15780639f1185361461030a578063a3ec138d14610316578063c7f758a814610352578063d07bff0c146103c5575b005b6100ae60043533600160a060020a03166000908152600460205260409020600181015460ff161561051357610002565b61044d60043560058054829081101561000257506000526002027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08101546000805160206107f88339815191529091015482565b6104666005545b90565b610478600054600160a060020a031681565b604080516004803580820135602081810285810182019096528185526100ae9593946024949093850192918291908501908490808284375094965050505050505060005b815181101561056057600580546001810180835582818380158290116105715760008390526105719060029081027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0908101918402015b808211156105de57600080825560018201556002016101eb565b61046660015481565b6100ae60043533600160a060020a03166000908152600460205260408120600181015490919060ff16156105e257610002565b610466600080805b60055481101561074857816005600050828154811015610002576000919091526002026000805160206107f8833981519152015411156102ae57600580548290811015610002576002026000805160206107f883398151915201549193509091508290505b600101610249565b61046660025461013b565b6100ae60043560005433600160a060020a0390811691161415806103005750600160a060020a03811660009081526004602052604090206001015460ff165b1561074d57610002565b61049560035460ff1681565b6104a960043560046020526000908152604090208054600182015460029290920154909160ff811691610100909104600160a060020a03169084565b61044d600435600060006005600050838154811015610002575080548183527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600286020154919085908110156100025750506000805160206107f8833981519152600290940293909301549293915050565b6104d86004356000600060006000600060006000600260005088815481101561000257507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90980154600160a060020a039081169182905260046020526040909220805460018201549190990154919960ff8216985061010090910490921695509350915050565b6040805192835260208301919091528051918290030190f35b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b604080519115158252519081900360200190f35b604080519485529215156020850152600160a060020a0391909116838301526060830152519081900360800190f35b60408051600160a060020a03968716815260208101959095529215158484015293166060830152608082019290925290519081900360a00190f35b6001818101805460ff19169091179055600281018290556005805482549190849081101561000257506000526002929092026000805160206107f883398151915201805490920190915550565b6003805460ff191660011790555050565b5050509190906000526020600020906002020160006040604051908101604052808686815181101561000257906020019060200201518152602001600081526020015090919091506000820151816000016000505560208201518160010160005055505050600101610194565b5090565b5b600160a060020a03838116600090815260046020526040812060010154610100900490911614801590610660575033600160a060020a03166004600050600085600160a060020a0316815260200190815260200160002060005060010160019054906101000a9004600160a060020a0316600160a060020a031614155b1561069057600160a060020a039283166000908152600460205260409020600101546101009004909216916105e3565b33600160a060020a031683600160a060020a031614156106af57610002565b506001818101805460ff1916821774ffffffffffffffffffffffffffffffffffffffff0019166101008502179055600160a060020a03831660009081526004602052604090209081015460ff161561073b578154600282015460058054909190811015610002576000919091526002026000805160206107f88339815191520180549091019055610743565b815481540181555b505050565b505090565b600160a060020a03811660009081526004602052604090206001908190556002805491820180825590919082818380158290116107c95760008390526107c9907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9081019083015b808211156105de57600081556001016107b5565b505050600092835250602090912001805473ffffffffffffffffffffffffffffffffffffffff1916909117905556036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1",
    address: "0x09534459b5e257e51612e685df9881e5894f0651",
    generated_with: "2.0.9",
    contract_name: "Ballot"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Ballot error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Ballot error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Ballot error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Ballot error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Ballot = Contract;
  }

})();
